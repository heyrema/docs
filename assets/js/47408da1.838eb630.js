"use strict";(self.webpackChunkrema_docs=self.webpackChunkrema_docs||[]).push([[998],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),u=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=u(n),d=a,f=c["".concat(p,".").concat(d)]||c[d]||m[d]||i;return n?r.createElement(f,o(o({ref:t},s),{},{components:n})):r.createElement(f,o({ref:t},s))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=c;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var u=2;u<i;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},2709:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return p},default:function(){return d},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return m}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],l={sidebar_position:3},p="Environment Variables",u={unversionedId:"setup/environment-variables",id:"setup/environment-variables",title:"Environment Variables",description:"The following environment variables are used by Rema:",source:"@site/docs/setup/environment-variables.md",sourceDirName:"setup",slug:"/setup/environment-variables",permalink:"/rema-docs/docs/setup/environment-variables",editUrl:"https://github.com/paramsiddharth/rema-docs/tree/main/packages/create-docusaurus/templates/shared/docs/setup/environment-variables.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Development Setup",permalink:"/rema-docs/docs/setup/development-setup"},next:{title:"Templates",permalink:"/rema-docs/docs/templates/"}},s={},m=[],c={toc:m};function d(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"environment-variables"},"Environment Variables"),(0,i.kt)("p",null,"The following environment variables are used by Rema:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"PORT")," : Defines what port Rema runs on.",(0,i.kt)("br",{parentName:"li"}),"Default: ",(0,i.kt)("inlineCode",{parentName:"li"},"8080"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"DB")," : The MongoDB connection URI.",(0,i.kt)("br",{parentName:"li"}),"Default: ",(0,i.kt)("inlineCode",{parentName:"li"},"http://localhost/rema"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"NODE_ENV")," : The runtime environment used by the server (Express).",(0,i.kt)("br",{parentName:"li"}),"Values: ",(0,i.kt)("inlineCode",{parentName:"li"},"production"),", and ",(0,i.kt)("inlineCode",{parentName:"li"},"development"),".",(0,i.kt)("br",{parentName:"li"}),"Startup       | Default Value\n---           | ---\n",(0,i.kt)("inlineCode",{parentName:"li"},"npm run dev")," | ",(0,i.kt)("inlineCode",{parentName:"li"},"development"),(0,i.kt)("inlineCode",{parentName:"li"},"npm start"),"   | ",(0,i.kt)("inlineCode",{parentName:"li"},"production")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"HIDE_DEBUG_OUTPUT")," : Any non-empty value prevents all\nthe console debug output."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"MAX_DIMENSION_OVERRIDE")," : Overrides the maximum dimension (in pixels) used by Rema.",(0,i.kt)("br",{parentName:"li"}),"It can only go as high as 32767 pixels. If exceeded, it falls back to the default value.",(0,i.kt)("br",{parentName:"li"}),"Default: ",(0,i.kt)("inlineCode",{parentName:"li"},"9830"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"INTERNAL_STATIC_DIR")," : The folder where all internal static resources are stored by\nRema, such as images.",(0,i.kt)("br",{parentName:"li"}),"Default: The ",(0,i.kt)("inlineCode",{parentName:"li"},"static")," directory in Rema's root."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"BASE_ROUTE")," : The route on which Rema is been mounted, via reverse-proxying and the like.",(0,i.kt)("br",{parentName:"li"}),"This configuration is required for the links in the front-end to work properly.",(0,i.kt)("br",{parentName:"li"}),"Default: ",(0,i.kt)("inlineCode",{parentName:"li"},"/")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"DIRECTORY")," : Any non-empty value implies the certificate directory is to be made available\nin the front-end.")))}d.isMDXComponent=!0}}]);